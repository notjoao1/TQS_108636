package com.tqs108636;

import org.junit.jupiter.api.Disabled;
// Generated by Selenium IDE
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

import org.openqa.selenium.By;

import io.github.bonigarcia.seljup.SeleniumJupiter;

import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import com.tqs108636.pages.ChooseFlightPage;
import com.tqs108636.pages.ConfirmationPage;
import com.tqs108636.pages.HomePage;
import com.tqs108636.pages.PurchaseFlightPage;

import org.openqa.selenium.JavascriptExecutor;

@ExtendWith(SeleniumJupiter.class)
public class SelectAndBuyATripBlazeTest {
    JavascriptExecutor js;

    // With Page Object Model pattern
    @Test
    public void selectAndBuyTripBlazePOMPattern(ChromeDriver driver) {
        HomePage homePage = new HomePage(driver);
        homePage.selectMexicoCity();
        ChooseFlightPage chooseFlightPage = homePage.clickFindFlights();
        // assert h3 to say Mexico City to Buenos Aires based on previous click
        assertThat(chooseFlightPage.getH3Heading(), equalTo("Flights from Mexico City to Buenos Aires:"));
        // assert title
        assertThat(chooseFlightPage.getTitle(), equalTo("BlazeDemo - reserve"));
        PurchaseFlightPage purchaseFlightPage = chooseFlightPage.clickChooseFlightButton();

        assertThat(purchaseFlightPage.getTitle(), equalTo("BlazeDemo Purchase"));
        assertThat(purchaseFlightPage.getH2Heading(), equalTo("Your flight from TLV to SFO has been reserved."));
        purchaseFlightPage.name("Test1");
        purchaseFlightPage.address("Test2");
        purchaseFlightPage.city("Test3");
        purchaseFlightPage.state("Test4");
        purchaseFlightPage.zipCode("Test5");
        purchaseFlightPage.creditCardNumber("Test6");
        purchaseFlightPage.nameOnCard("Test7");
        ConfirmationPage confirmationPage = purchaseFlightPage.clickPurchaseFlight();

        assertThat(confirmationPage.getTitle(), equalTo("BlazeDemo Confirmation"));
        assertThat(confirmationPage.getH1Heading(), equalTo("Thank you for your purchase today!"));
    }

    // Without Page Object Model
    @Test
    @Disabled
    public void selectAndBuyATripBlaze(ChromeDriver driver) {
        driver.get("https://blazedemo.com/");
        driver.manage().window().setSize(new Dimension(1912, 1044));
        {
            WebElement dropdown = driver.findElement(By.name("fromPort"));
            dropdown.findElement(By.xpath("//option[. = 'Mexico City']")).click();
        }
        driver.findElement(By.cssSelector(".form-inline:nth-child(1) > option:nth-child(6)")).click();
        driver.findElement(By.cssSelector(".btn-primary")).click();
        driver.findElement(By.cssSelector("tr:nth-child(3) .btn")).click();
        driver.findElement(By.cssSelector("h2")).click();
        assertThat(driver.findElement(By.cssSelector("h2")).getText(),
                is("Your flight from TLV to SFO has been reserved."));
        driver.findElement(By.id("inputName")).click();
        driver.findElement(By.id("inputName")).sendKeys("Test1");
        driver.findElement(By.id("address")).sendKeys("Test2");
        driver.findElement(By.id("city")).sendKeys("Test3");
        driver.findElement(By.id("state")).sendKeys("Test4");
        driver.findElement(By.id("zipCode")).sendKeys("Test5");
        driver.findElement(By.id("creditCardNumber")).sendKeys("Test6");
        driver.findElement(By.id("nameOnCard")).sendKeys("Test7");
        driver.findElement(By.cssSelector(".btn-primary")).click();
        assertThat(driver.findElement(By.cssSelector("h1")).getText(), is("Thank you for your purchase today!"));
        assertThat(driver.getTitle(), is("BlazeDemo Confirmation"));
    }
}